#!/usr/bin/env bash
# ------------------------------------------------------------------
# Copyright (c) 2008 William Dickson
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ------------------------------------------------------------------
# lxrt-comedi
#
# Purpose: Inserts and removes the required kernel modules for
# programs which require both RTAI/lxrt and comedi. 
#
# Author: Will Dickson
#
# -------------------------------------------------------------------

# Set Environemt
source /etc/environment

# Constants
rtaidir=`rtai-config --module-dir`
udev_sleep=0.25
max_cnt=5
num_dev=2
comedi_dev0=/dev/comedi0
comedi_dev1=/dev/comedi1
daq_card_driver0=cb_pcidas
daq_card_driver1=ni_pcimio

# Print usage information 
function usage {
    echo "Usage: `basename $0` [Options] Commmand"
    echo 
    echo "Inserts and removes the required kernel modules for programs"
    echo "requiring RTAI lxrt and comedi." 
    echo 
    echo "Commmands:"
    echo "  start    insert RTAI lxrt and comedi modules into kernel"
    echo "  stop     remove RTAI lxrt and comedi modules from kernel"
    echo "  restart  remove and insert RTAI lxrt and comedi modules "
    echo 
    echo "Options:"
    echo "  -h,  print help information"  
    echo "  -d,  specify number of commedi devices, 1 for one device,"
    echo "       to for 2 devices."
}

# Wait while comedi driver in installed
function waitfor_dev() {
    cnt=0
    until test -e $1 || [ $cnt = $max_cnt ]
    do
        sleep $udev_sleep
        let cnt=cnt+1
    done
}

# Insert kernel modules
function install_lxrt {
    echo "inserting lxrt-comedi"
    insmod ${rtaidir}/rtai_hal.ko 
    insmod ${rtaidir}/rtai_lxrt.ko
    insmod ${rtaidir}/rtai_fifos.ko
    insmod ${rtaidir}/rtai_sem.ko
    insmod ${rtaidir}/rtai_mbx.ko
    insmod ${rtaidir}/rtai_msg.ko
    insmod ${rtaidir}/rtai_shm.ko
    modprobe comedi
    modprobe kcomedilib
    modprobe comedi_fc
    insmod ${rtaidir}/rtai_comedi.ko
    echo "setting up $comedi_dev0"
    modprobe ${daq_card_driver0}
    waitfor_dev comedi_dev0
    comedi_config $comedi_dev0 ${daq_card_driver0}
    if [ $num_dev = 2 ]; then
        echo "setting up $comedi_dev1"
        modprobe ${daq_card_driver1}
        waitfor_dev comedi_dev1
        comedi_config $comedi_dev1 ${daq_card_driver1}
    fi
}

# Remove kernel modules
function remove_lxrt {
    echo "removing lxrt-comedi"
    modprobe -r ${daq_card_driver0}
    modprobe -r ${daq_card_driver1}
    rmmod rtai_comedi
    modprobe -r comedi_fc
    modprobe -r kcomedilib
    modprobe -r comedi
    rmmod rtai_shm
    rmmod rtai_msg
    rmmod rtai_mbx
    rmmod rtai_sem
    rmmod rtai_fifos
    rmmod rtai_lxrt
    rmmod rtai_hal
}

# ------------------------------------------------------

# Check number of arguments
if [ $# -eq 0 ]; then
    echo Error: too few arguments
    echo
    usage
    exit 1
fi

# Handle optional arguments
while getopts hd: OPT; do
    case $OPT in
	
	h)  usage
	    exit 0
	    ;;
    d)  num_dev=$OPTARG
        echo "number of devices = $num_dev"
        ;;
	\?) echo 
	    usage
	    exit 1
	    ;;
    esac
done

shift `expr $OPTIND - 1`

# Make sure that one command is given
if [ $# -eq 0 ]; then
    echo Error: missing command
    echo
    usage
    exit 1
elif [ $# -gt 1 ]; then
    echo Error: too many commands
    echo
    usage
    exit 1
fi 

# Run command
case $1 in

    start) install_lxrt
	   ;;
    stop)  remove_lxrt
	   ;;
    restart) remove_lxrt; install_lxrt
	   ;;
	
    *)     echo Error: uknown command $1 
	   echo 
	   usage 
	   exit 1
	   ;;

    esac
exit 0
 
